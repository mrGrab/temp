let OctokitRest,OctokitPluginThrottling;_a83‍.x([["default",()=>_a83‍.o]]);_a83‍.w("@octokit/rest",[["default",["OctokitRest"],function(v){OctokitRest=v}]]);_a83‍.w("@octokit/plugin-throttling",[["default",["OctokitPluginThrottling"],function(v){OctokitPluginThrottling=v}]]);


OctokitRest.plugin(OctokitPluginThrottling);

_a83‍.d(new OctokitRest({
  throttle: {
    onRateLimit: (retryAfter, options) => {
      console.warn(
        `Request quota exhausted for request ${options.method} ${options.url}`,
      );

      if (options.request.retryCount === 0) {
        // only retries once
        console.log(`Retrying after ${retryAfter} seconds!`);
        return true;
      }

      return false;
    },
    onAbuseLimit: (retryAfter, options) => {
      // does not retry, only logs a warning
      console.warn(
        `Abuse detected for request ${options.method} ${options.url}`,
      );
    },
  },
}));
