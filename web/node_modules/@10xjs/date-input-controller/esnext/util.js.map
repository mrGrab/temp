{"version":3,"sources":["../src/util.js"],"names":["daysInMonth","year","month","date","Date","getDate","areEqualDates","a","b","getTime","getDateField","utc","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","fieldKeys","dateValue","state","args","map","_","i","props","UTC","apply","bind","concat","atMin","index","min","atMax","max","defaultMin","defaultMax","resolveDefaultMax","getMin","getMax","updateField","value","key","minKey","maxKey","nextState","nextValue","update","getInitialState","target","updaters","actions","forEach","field","push","setter","fields","setFields","charAt","toUpperCase","slice","reduce","updater"],"mappings":"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","sourcesContent":["// @flow strict\n\nimport type {State, FieldActions} from './types';\nimport type DateInputController from './DateInputController';\n\nexport const daysInMonth = (year: number, month: number): number => {\n  // Create a date object at the last day of the selected month by using\n  // referencing the 0th date of the next month.\n  const date = new Date(year, month + 1, 0);\n  return date.getDate();\n};\n\n// Check it two values represent equal dates at second precision.\n// This comparison ROUNDS DOWN TO THE PREVIOUS SECOND.\nexport const areEqualDates = (a: ?Date, b: ?Date): boolean => {\n  return (\n    a === b ||\n    (a instanceof Date &&\n      b instanceof Date &&\n      ((a.getTime() / 1000) | 0) === ((b.getTime() / 1000) | 0))\n  );\n};\n\nexport const getDateField = [\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCFullYear() : date.getFullYear(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCMonth() : date.getMonth(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCDate() : date.getDate(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCHours() : date.getHours(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCMinutes() : date.getMinutes(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCSeconds() : date.getSeconds(),\n];\n\nexport const fieldKeys = ['year', 'month', 'day', 'hour', 'minute', 'second'];\n\nexport const dateValue = (state: State): Date => {\n  const args = fieldKeys.map((_, i) => state[fieldKeys[i]]);\n  if (state.props.utc) {\n    return new Date(Date.UTC.apply(null, args));\n  }\n  // $ExpectError Flow doesn't like us touching Date.bind\n  return new (Date.bind.apply(Date, [null].concat(args)))();\n};\n\n// Min Max Calc\nconst atMin = (state: State, index: number) => {\n  if (index < 0) {\n    return true;\n  }\n\n  const min = state.props.min;\n  return (\n    min &&\n    ((index === 0 ? true : atMin(state, index - 1)) &&\n      getDateField[index](min, state.props.utc) >= state[fieldKeys[index]])\n  );\n};\n\nconst atMax = (state: State, index: number) => {\n  if (index < 0) {\n    return true;\n  }\n\n  const max = state.props.max;\n  return (\n    max &&\n    ((index === 0 ? true : atMax(state, index - 1)) &&\n      getDateField[index](max, state.props.utc) <= state[fieldKeys[index]])\n  );\n};\n\nexport const defaultMin = [null, 0, 1, 0, 0, 0];\nexport const defaultMax = [null, 11, null, 23, 59, 59];\n\nconst resolveDefaultMax = (state: State, index: number) => {\n  return index === 2\n    ? daysInMonth(state[fieldKeys[0]], state[fieldKeys[1]])\n    : defaultMax[index];\n};\n\nexport const getMin = (state: State, index: number) => {\n  const min = state.props.min;\n  // If min date is defined and the next-largest field is at its min value...\n  return min && atMin(state, index - 1)\n    ? // return the value of the min date at the current field...\n      getDateField[index](min, state.props.utc)\n    : // or return a default min value for the field.\n      defaultMin[index];\n};\n\nexport const getMax = (state: State, index: number) => {\n  const max = state.props.max;\n  // If max date is defined and the next-largest field is at its max value...\n  return max && atMax(state, index - 1)\n    ? // return the value of the max date at the current field...\n      getDateField[index](max, state.props.utc)\n    : // or return a default max value for the field.\n      resolveDefaultMax(state, index);\n};\n\nexport const updateField = (index: number, value: number) => (\n  state: State,\n): State => {\n  const key = fieldKeys[index];\n  const minKey = `${key}Min`;\n  const maxKey = `${key}Max`;\n\n  let nextState = state;\n\n  const min = getMin(state, index);\n  const max = getMax(state, index);\n\n  let nextValue = value;\n\n  if (min !== null && nextValue < min) {\n    nextValue = min;\n  } else if (max !== null && nextValue > max) {\n    nextValue = max;\n  }\n\n  if (\n    nextValue !== state[key] ||\n    min !== state[minKey] ||\n    max !== state[maxKey]\n  ) {\n    const update = {};\n    update[key] = nextValue;\n    update[`${key}Min`] = min;\n    update[`${key}Max`] = max;\n\n    nextState = Object.assign({}, state, update);\n  }\n\n  return nextState;\n};\n\nexport const getInitialState = (\n  target: DateInputController,\n): {state: State, actions: FieldActions} => {\n  const updaters = [];\n\n  const {value = new Date(0), min, max, utc} = target.props;\n\n  const actions: $Shape<FieldActions> = {};\n  let state: $Shape<State> = {\n    value,\n    props: {value, min, max, utc},\n  };\n\n  fieldKeys.forEach((field, i) => {\n    updaters.push(\n      updateField(i, getDateField[i](state.value, state.props.utc)),\n    );\n\n    const setter = (value) => {\n      const fields = {};\n      fields[field] = value;\n      target.setFields(fields);\n    };\n\n    actions[`set${field.charAt(0).toUpperCase()}${field.slice(1)}`] = setter;\n  });\n\n  Object.assign(state, actions);\n\n  state = updaters.reduce((state, updater) => updater(state), state);\n  state.value = dateValue(state);\n\n  return {state, actions};\n};\n"],"file":"util.js"}