{"version":3,"file":"index.js","sources":["../src/util.js","../src/DateInputController.js","../src/index.js"],"sourcesContent":["// @flow strict\n\nimport type {State, FieldActions} from './types';\nimport type DateInputController from './DateInputController';\n\nexport const daysInMonth = (year: number, month: number): number => {\n  // Create a date object at the last day of the selected month by using\n  // referencing the 0th date of the next month.\n  const date = new Date(year, month + 1, 0);\n  return date.getDate();\n};\n\n// Check it two values represent equal dates at second precision.\n// This comparison ROUNDS DOWN TO THE PREVIOUS SECOND.\nexport const areEqualDates = (a: ?Date, b: ?Date): boolean => {\n  return (\n    a === b ||\n    (a instanceof Date &&\n      b instanceof Date &&\n      ((a.getTime() / 1000) | 0) === ((b.getTime() / 1000) | 0))\n  );\n};\n\nexport const getDateField = [\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCFullYear() : date.getFullYear(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCMonth() : date.getMonth(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCDate() : date.getDate(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCHours() : date.getHours(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCMinutes() : date.getMinutes(),\n  (date: Date, utc: boolean): number =>\n    utc ? date.getUTCSeconds() : date.getSeconds(),\n];\n\nexport const fieldKeys = ['year', 'month', 'day', 'hour', 'minute', 'second'];\n\nexport const dateValue = (state: State): Date => {\n  const args = fieldKeys.map((_, i) => state[fieldKeys[i]]);\n  if (state.props.utc) {\n    return new Date(Date.UTC.apply(null, args));\n  }\n  // $ExpectError Flow doesn't like us touching Date.bind\n  return new (Date.bind.apply(Date, [null].concat(args)))();\n};\n\n// Min Max Calc\nconst atMin = (state: State, index: number) => {\n  if (index < 0) {\n    return true;\n  }\n\n  const min = state.props.min;\n  return (\n    min &&\n    ((index === 0 ? true : atMin(state, index - 1)) &&\n      getDateField[index](min, state.props.utc) >= state[fieldKeys[index]])\n  );\n};\n\nconst atMax = (state: State, index: number) => {\n  if (index < 0) {\n    return true;\n  }\n\n  const max = state.props.max;\n  return (\n    max &&\n    ((index === 0 ? true : atMax(state, index - 1)) &&\n      getDateField[index](max, state.props.utc) <= state[fieldKeys[index]])\n  );\n};\n\nexport const defaultMin = [null, 0, 1, 0, 0, 0];\nexport const defaultMax = [null, 11, null, 23, 59, 59];\n\nconst resolveDefaultMax = (state: State, index: number) => {\n  return index === 2\n    ? daysInMonth(state[fieldKeys[0]], state[fieldKeys[1]])\n    : defaultMax[index];\n};\n\nexport const getMin = (state: State, index: number) => {\n  const min = state.props.min;\n  // If min date is defined and the next-largest field is at its min value...\n  return min && atMin(state, index - 1)\n    ? // return the value of the min date at the current field...\n      getDateField[index](min, state.props.utc)\n    : // or return a default min value for the field.\n      defaultMin[index];\n};\n\nexport const getMax = (state: State, index: number) => {\n  const max = state.props.max;\n  // If max date is defined and the next-largest field is at its max value...\n  return max && atMax(state, index - 1)\n    ? // return the value of the max date at the current field...\n      getDateField[index](max, state.props.utc)\n    : // or return a default max value for the field.\n      resolveDefaultMax(state, index);\n};\n\nexport const updateField = (index: number, value: number) => (\n  state: State,\n): State => {\n  const key = fieldKeys[index];\n  const minKey = `${key}Min`;\n  const maxKey = `${key}Max`;\n\n  let nextState = state;\n\n  const min = getMin(state, index);\n  const max = getMax(state, index);\n\n  let nextValue = value;\n\n  if (min !== null && nextValue < min) {\n    nextValue = min;\n  } else if (max !== null && nextValue > max) {\n    nextValue = max;\n  }\n\n  if (\n    nextValue !== state[key] ||\n    min !== state[minKey] ||\n    max !== state[maxKey]\n  ) {\n    const update = {};\n    update[key] = nextValue;\n    update[`${key}Min`] = min;\n    update[`${key}Max`] = max;\n\n    nextState = Object.assign({}, state, update);\n  }\n\n  return nextState;\n};\n\nexport const getInitialState = (\n  target: DateInputController,\n): {state: State, actions: FieldActions} => {\n  const updaters = [];\n\n  const {value = new Date(0), min, max, utc} = target.props;\n\n  const actions: $Shape<FieldActions> = {};\n  let state: $Shape<State> = {\n    value,\n    props: {value, min, max, utc},\n  };\n\n  fieldKeys.forEach((field, i) => {\n    updaters.push(\n      updateField(i, getDateField[i](state.value, state.props.utc)),\n    );\n\n    const setter = (value) => {\n      const fields = {};\n      fields[field] = value;\n      target.setFields(fields);\n    };\n\n    actions[`set${field.charAt(0).toUpperCase()}${field.slice(1)}`] = setter;\n  });\n\n  Object.assign(state, actions);\n\n  state = updaters.reduce((state, updater) => updater(state), state);\n  state.value = dateValue(state);\n\n  return {state, actions};\n};\n","// @flow strict\n\nimport * as React from 'react';\n\nimport type {Props, State} from './types';\n\nimport {\n  areEqualDates,\n  getDateField,\n  dateValue,\n  fieldKeys,\n  getInitialState,\n  updateField,\n} from './util';\n\nclass DateInputController extends React.PureComponent<Props, State> {\n  static defaultProps: typeof DateInputController.defaultProps;\n  static getDerivedStateFromProps: typeof DateInputController.getDerivedStateFromProps;\n\n  setYear: (value: number) => void;\n  setMonth: (value: number) => void;\n  setDay: (value: number) => void;\n  setHour: (value: number) => void;\n  setMinute: (value: number) => void;\n  setSecond: (value: number) => void;\n\n  _updateState(updater: (State) => State) {\n    let updated = false;\n\n    this.setState(\n      (state) => {\n        const nextState = updater(state);\n\n        if (nextState === state) {\n          return null;\n        }\n\n        updated = true;\n\n        nextState.value = dateValue(nextState);\n\n        return nextState;\n      },\n      () => {\n        updated && this.props.onChange && this.props.onChange(this.state.value);\n      },\n    );\n  }\n\n  setFields(fields: {\n    year?: number | string,\n    month?: number | string,\n    day?: number | string,\n    hour?: number | string,\n    minute?: number | string,\n    second?: number | string,\n  }) {\n    this._updateState((state) => {\n      const updaters = [];\n\n      for (let i = 0; i < fieldKeys.length; i++) {\n        const key = fieldKeys[i];\n        const value = fields[key];\n\n        if (value !== undefined) {\n          if (typeof value === 'number' && (value | 0) === value) {\n            updaters.push(updateField(i, value));\n          } else if (typeof value === 'string' && /^[0-9]+$/.test(value)) {\n            updaters.push(updateField(i, parseInt(value, 10)));\n          } else {\n            throw new TypeError(`Expected int ${key}. Received ${value}.`);\n          }\n        } else if (updaters.length) {\n          updaters.push(updateField(i, state[fieldKeys[i]]));\n        }\n      }\n\n      return updaters.reduce((state, updater) => updater(state), state);\n    });\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const result = getInitialState(this);\n    Object.assign(this, result.actions);\n    this.state = result.state;\n  }\n\n  render() {\n    const {children} = this.props;\n    return children(this.state);\n  }\n}\n\nDateInputController.defaultProps = {\n  utc: false,\n};\n\nDateInputController.getDerivedStateFromProps = (props: Props, state: State) => {\n  const {value = new Date(0), min, max, utc} = props;\n\n  const newValue = !areEqualDates(state.props.value, value);\n  const newMin = !areEqualDates(state.props.min, min);\n  const newMax = !areEqualDates(state.props.max, max);\n  const newUTC = state.props.utc !== utc;\n\n  // Check if any of the props that can affect state have changed.\n  if (!newValue && !newMin && !newMax && !newUTC) {\n    return null;\n  }\n\n  let nextState = Object.assign({}, state, {props: {value, min, max, utc}});\n\n  const updaters = fieldKeys.map((_, i) =>\n    updateField(i, getDateField[i](newValue ? value : state.value, utc)),\n  );\n\n  // Calculate a new state from the incoming props.\n  nextState = updaters.reduce((state, updater) => updater(state), nextState);\n\n  const nextValue = dateValue(nextState);\n\n  if (!areEqualDates(nextValue, state.value)) {\n    nextState.value = nextValue;\n  }\n\n  // Return new state to trigger an update.\n  return nextState;\n};\n\nexport default DateInputController;\n","// @flow strict\n\nexport {default} from './DateInputController';\n"],"names":["daysInMonth","year","month","date","Date","getDate","areEqualDates","a","b","getTime","getDateField","utc","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","fieldKeys","dateValue","state","args","map","_","i","props","UTC","apply","bind","concat","atMin","index","min","atMax","max","defaultMin","defaultMax","resolveDefaultMax","getMin","getMax","updateField","value","key","minKey","maxKey","nextState","nextValue","update","getInitialState","target","updaters","actions","forEach","field","push","setter","fields","setFields","charAt","toUpperCase","slice","reduce","updater","DateInputController","updated","setState","onChange","_updateState","length","undefined","test","parseInt","TypeError","result","children","React","defaultProps","getDerivedStateFromProps","newValue","newMin","newMax","newUTC"],"mappings":"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"}