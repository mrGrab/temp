{"version":3,"sources":["../src/DefaultStateProvider.js"],"names":["React","set","setWith","parsePath","formatPath","emptyPathArrayError","emptyPathStringError","hasValue","SubmitValidationError","updateWarningState","state","nextState","warningState","updateErrorState","errorState","updateSubmitErrorState","submitErrorState","runWarn","props","warn","valueState","runValidate","validate","updateValue","path","value","length","TypeError","concat","updateInitialValue","updatePendingValue","updateVisited","key","visited","updater","currentVisited","updateTouched","touched","currentTouched","updateFocused","focused","focusedPath","updateSubmit","error","errors","DefaultStateProvider","PureComponent","setValue","setState","setInitialValue","setPendingValue","setVisited","setTouched","setFocused","submit","event","preventDefault","promise","update","Promise","resolve","_willUnmount","submitting","reject","Error","then","onSubmit","result","onSubmitSuccess","onSubmitValidationFail","onSubmitFail","getInitialState","initialValueState","values","pendingValueState","touchedMap","visitedMap","submitFailed","submitSucceeded","actions","bind","_props","componentWillUnmount","constructor","render","children","defaultProps","getDerivedStateFromProps"],"mappings":"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","sourcesContent":["// @flow strict\n\nimport * as React from 'react';\n\nimport type {\n  DefaultStateProviderProps,\n  Context,\n  PathArray,\n  Path,\n} from './types';\n\nimport {\n  set,\n  setWith,\n  parsePath,\n  formatPath,\n  emptyPathArrayError,\n  emptyPathStringError,\n  hasValue,\n} from './util';\nimport SubmitValidationError from './SubmitValidationError';\n\ntype Props<T> = DefaultStateProviderProps<T>;\ntype State = {_props: *} & Context;\n\nconst updateWarningState = (state: State) => {\n  let nextState: State = state;\n\n  if (!hasValue(nextState.warningState)) {\n    nextState = set(nextState, ['warningState'], null);\n  }\n\n  return nextState;\n};\n\nconst updateErrorState = (state: State) => {\n  let nextState: State = state;\n\n  if (!hasValue(nextState.errorState)) {\n    nextState = set(nextState, ['errorState'], null);\n  }\n\n  return nextState;\n};\n\nconst updateSubmitErrorState = (state: State) => {\n  let nextState: State = state;\n\n  if (!hasValue(nextState.submitErrorState)) {\n    nextState = set(nextState, ['submitErrorState'], null);\n  }\n\n  return nextState;\n};\n\nconst runWarn = <T>(state: State, props: Props<T>) => {\n  let nextState: State = state;\n\n  const warningState = props.warn(state.valueState) || null;\n\n  nextState = set(nextState, ['warningState'], warningState);\n\n  if (nextState.warningState !== state.warningState) {\n    nextState = updateWarningState(nextState);\n  }\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst runValidate = <T>(state: State, props: Props<T>) => {\n  let nextState: State = state;\n\n  const errorState = props.validate(state.valueState) || null;\n\n  nextState = set(nextState, ['errorState'], errorState);\n\n  if (nextState.errorState !== state.errorState) {\n    nextState = updateErrorState(nextState);\n  }\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst updateValue = (path: PathArray, value: mixed) => <T>(\n  state: State,\n  props: Props<T>,\n) => {\n  if (path.length < 1) {\n    throw new TypeError(emptyPathArrayError());\n  }\n\n  let nextState: State = state;\n\n  nextState = set(nextState, ['valueState'].concat(path), value);\n\n  if (nextState === state) {\n    return null;\n  }\n\n  nextState = runWarn(nextState, props) || nextState;\n  nextState = runValidate(nextState, props) || nextState;\n  nextState = set(nextState, ['submitErrorState'], null);\n\n  return nextState;\n};\n\nconst updateInitialValue = (path: PathArray, value: mixed) => (\n  state: State,\n) => {\n  if (path.length < 1) {\n    throw new TypeError(emptyPathArrayError());\n  }\n\n  let nextState: State = state;\n\n  nextState = set(nextState, ['initialValueState'].concat(path), value);\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst updatePendingValue = (path: PathArray, value: mixed) => (\n  state: State,\n) => {\n  if (path.length < 1) {\n    throw new TypeError(emptyPathArrayError());\n  }\n\n  let nextState: State = state;\n\n  nextState = set(nextState, ['pendingValueState'].concat(path), value);\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst updateVisited = (key: string, visited: boolean) => (state: State) => {\n  if (key.length < 1) {\n    throw new TypeError(emptyPathStringError());\n  }\n\n  let nextState: State = state;\n\n  const updater = (currentVisited) => {\n    return !!currentVisited === visited ? currentVisited : visited;\n  };\n\n  nextState = setWith(nextState, ['visitedMap', key], updater);\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst updateTouched = (key: string, touched: boolean) => (state: State) => {\n  if (key.length < 1) {\n    throw new TypeError(emptyPathStringError());\n  }\n  let nextState: State = state;\n\n  const updater = (currentTouched) => {\n    return !!currentTouched === touched ? currentTouched : touched;\n  };\n\n  nextState = setWith(nextState, ['touchedMap', key], updater);\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nconst updateFocused = (key: string, focused: boolean) => (state: State) => {\n  if (key.length < 1) {\n    throw new TypeError(emptyPathStringError());\n  }\n\n  if (focused) {\n    if (state.focusedPath === key) {\n      return null;\n    }\n\n    return {focusedPath: key};\n  }\n\n  if (state.focusedPath !== key) {\n    return null;\n  }\n\n  return {focusedPath: null};\n};\n\nconst updateSubmit = (error?: Error) => (state: State) => {\n  let nextState: State = state;\n\n  nextState = set(nextState, ['submitting'], false);\n  nextState = set(nextState, ['submitSucceeded'], !error);\n  nextState = set(nextState, ['submitFailed'], !!error);\n\n  let submitErrorState;\n\n  if (error && error instanceof SubmitValidationError) {\n    submitErrorState = error.errors;\n  } else {\n    submitErrorState = null;\n  }\n\n  nextState = set(nextState, ['submitErrorState'], submitErrorState);\n  nextState = updateSubmitErrorState(nextState);\n\n  return nextState;\n};\n\nclass DefaultStateProvider<T> extends React.PureComponent<Props<T>, State> {\n  static defaultProps: typeof DefaultStateProvider.defaultProps;\n  static getDerivedStateFromProps: typeof DefaultStateProvider.getDerivedStateFromProps;\n\n  _willUnmount: boolean;\n\n  setValue(path: Path, value: mixed) {\n    this.setState(updateValue(parsePath(path), value));\n  }\n\n  setInitialValue(path: Path, value: mixed) {\n    this.setState(updateInitialValue(parsePath(path), value));\n  }\n\n  setPendingValue(path: Path, value: mixed) {\n    this.setState(updatePendingValue(parsePath(path), value));\n  }\n\n  setVisited(path: Path, visited: boolean) {\n    this.setState(updateVisited(formatPath(path), visited));\n  }\n\n  setTouched(path: Path, touched: boolean) {\n    this.setState(updateTouched(formatPath(path), touched));\n  }\n\n  setFocused(path: Path, focused: boolean) {\n    this.setState(updateFocused(formatPath(path), focused));\n  }\n\n  submit(event?: Event | SyntheticEvent<>) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    let promise: Promise<T>;\n\n    const setState = (update) =>\n      new Promise(\n        (resolve) =>\n          this._willUnmount ? resolve() : this.setState(update, resolve),\n      );\n\n    setState((state, props) => {\n      if (state.submitting) {\n        promise = Promise.reject(\n          new Error('Form submit blocked pending current submit resolution.'),\n        );\n        return null;\n      }\n\n      if (state.errorState !== null) {\n        promise = Promise.reject(new SubmitValidationError(state.errorState));\n        return null;\n      }\n\n      promise = Promise.resolve(state.valueState).then(props.onSubmit);\n\n      return set(state, ['submitting'], true);\n    }).then(() => {\n      promise.then(\n        (result) =>\n          setState(updateSubmit()).then(() =>\n            this.props.onSubmitSuccess(result),\n          ),\n        (error) =>\n          setState(updateSubmit(error)).then(\n            () =>\n              error instanceof SubmitValidationError\n                ? this.props.onSubmitValidationFail(error)\n                : this.props.onSubmitFail(error),\n          ),\n      );\n    });\n  }\n\n  getInitialState() {\n    let state = {\n      initialValueState: this.props.values,\n      valueState: this.props.values,\n      pendingValueState: this.props.values,\n      warningState: null,\n      errorState: null,\n      submitErrorState: null,\n      focusedPath: null,\n      touchedMap: {},\n      visitedMap: {},\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n\n      actions: {\n        setValue: this.setValue.bind(this),\n        setInitialValue: this.setInitialValue.bind(this),\n        setPendingValue: this.setPendingValue.bind(this),\n        setTouched: this.setTouched.bind(this),\n        setVisited: this.setVisited.bind(this),\n        setFocused: this.setFocused.bind(this),\n        submit: this.submit.bind(this),\n      },\n\n      // Cache prop values for comparison in getDerivedStateFromProps\n      _props: {\n        warn: this.props.warn,\n        validate: this.props.validate,\n      },\n    };\n\n    state = runValidate(state, this.props) || state;\n    state = runWarn(state, this.props) || state;\n\n    return state;\n  }\n\n  componentWillUnmount() {\n    this._willUnmount = true;\n  }\n\n  constructor(props: Props<T>) {\n    super(props);\n    this._willUnmount = false;\n    this.state = this.getInitialState();\n  }\n\n  render() {\n    const {children} = this.props;\n    return children(this.state);\n  }\n}\n\nDefaultStateProvider.defaultProps = {\n  values: {},\n  onSubmit: () => {},\n  onSubmitFail: (error: Error) => Promise.reject(error),\n  onSubmitSuccess: () => {},\n  onSubmitValidationFail: () => {},\n  warn: () => null,\n  validate: () => null,\n};\n\nDefaultStateProvider.getDerivedStateFromProps = <T>(\n  props: Props<T>,\n  state: State,\n) => {\n  let nextState: State = state;\n\n  nextState = set(nextState, ['pendingValueState'], props.values);\n\n  if (props.validate !== state._props.validate) {\n    nextState = set(nextState, ['_props', 'validate'], props.validate);\n    nextState = runValidate(nextState, props) || nextState;\n  }\n\n  if (props.warn !== state._props.warn) {\n    nextState = set(nextState, ['_props', 'warn'], props.warn);\n    nextState = runWarn(nextState, props) || nextState;\n  }\n\n  if (nextState === state) {\n    return null;\n  }\n\n  return nextState;\n};\n\nexport default DefaultStateProvider;\n"],"file":"DefaultStateProvider.js"}