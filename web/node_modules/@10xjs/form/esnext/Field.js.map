{"version":3,"sources":["../src/Field.js"],"names":["React","parsePath","formatPath","parseEvent","mergeHandlers","hasValue","Consumer","renderWrapper","FieldWrapper","PureComponent","render","path","format","parse","compare","checkbox","initialValue","value","pendingValue","error","warning","focused","touched","visited","submitting","submitFailed","submitSucceeded","setFocused","setVisited","setTouched","setValue","setInitialValue","setPendingValue","submit","index","addField","removeField","children","props","parsedPath","formattedPath","dirty","detached","hasError","hasWarning","focus","visit","touch","change","nextValue","parsedValue","input","name","undefined","checked","onFocus","onBlur","onChange","eventOrValue","composeInput","userProps","arrayActions","addFieldBefore","addFieldAfter","pristine","rawValue","acceptPendingValue","rejectPendingValue","Field","context","defaultProps","v","otherValue"],"mappings":"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","sourcesContent":["// @flow strict\n\nimport * as React from 'react';\n\nimport type {FieldProps, FieldWrapperProps, InputProps} from './types';\nimport {\n  parsePath,\n  formatPath,\n  parseEvent,\n  mergeHandlers,\n  hasValue,\n} from './util';\nimport {Consumer} from './context';\nimport renderWrapper from './renderWrapper';\n\ntype HandlerProps = {\n  onFocus: (mixed) => mixed,\n  onBlur: (mixed) => mixed,\n  onChange: (mixed) => mixed,\n};\n\nclass FieldWrapper extends React.PureComponent<FieldWrapperProps> {\n  render() {\n    const {\n      // Field Config\n      path,\n      format,\n      parse,\n      compare,\n      checkbox,\n\n      // Field state\n      initialValue,\n      value,\n      pendingValue,\n      error,\n      warning,\n      focused,\n      touched,\n      visited,\n      submitting,\n      submitFailed,\n      submitSucceeded,\n\n      // Context Actions\n      setFocused,\n      setVisited,\n      setTouched,\n      setValue,\n      setInitialValue,\n      setPendingValue,\n      submit,\n\n      // FieldArray Props\n      index,\n      addField,\n      removeField,\n\n      // Render Callbacks\n      children,\n    } = this.props;\n\n    const parsedPath = parsePath(path);\n    const formattedPath = formatPath(path);\n\n    const dirty = !compare(value, initialValue);\n    const detached = !compare(value, pendingValue);\n\n    const hasError = hasValue(error);\n    const hasWarning = hasValue(warning);\n\n    const focus = (focused: boolean) => setFocused(formattedPath, focused);\n    const visit = (visited: boolean) => setVisited(formattedPath, visited);\n    const touch = (touched: boolean) => setTouched(formattedPath, touched);\n    const change = (nextValue) => {\n      const parsedValue = parse(nextValue, value);\n\n      if (!detached) {\n        setPendingValue(parsedPath, parsedValue);\n      }\n\n      setValue(parsedPath, parsedValue);\n    };\n\n    const input = {\n      name: formattedPath,\n      value: checkbox ? undefined : format(value),\n      checked: checkbox ? !!format(value) : undefined,\n      onFocus() {\n        focus(true);\n        visit(true);\n      },\n      onBlur() {\n        focus(false);\n        touch(true);\n      },\n      onChange(eventOrValue) {\n        change(parseEvent(eventOrValue));\n      },\n    };\n\n    const composeInput = <P: $Shape<HandlerProps>>(\n      userProps: P,\n    ): $Rest<P, $Exact<HandlerProps>> & InputProps =>\n      Object.assign({}, (userProps: $Rest<P, $Exact<HandlerProps>>), input, {\n        onFocus: mergeHandlers(userProps.onFocus, input.onFocus),\n        onBlur: mergeHandlers(userProps.onBlur, input.onBlur),\n        onChange: mergeHandlers(userProps.onChange, input.onChange),\n      });\n\n    let arrayActions;\n\n    if (addField && removeField && typeof index === 'number') {\n      arrayActions = {\n        addFieldBefore(value) {\n          addField(index, value);\n        },\n        addFieldAfter(value) {\n          addField(index + 1, value);\n        },\n        removeField() {\n          removeField(index);\n        },\n      };\n    }\n\n    return children(\n      Object.assign(\n        {\n          // Input Tag Props\n          input,\n          composeInput,\n\n          // \"Meta\" Props\n          path: formattedPath,\n          hasError,\n          error,\n          hasWarning,\n          warning,\n          focused,\n          touched,\n          visited,\n          dirty,\n          pristine: !dirty,\n          submitting,\n          submitFailed,\n          submitSucceeded,\n          initialValue,\n          rawValue: value,\n          pendingValue,\n          detached,\n\n          // Context Actions\n          setFocused: focus,\n          setVisited: visit,\n          setTouched: touch,\n          setValue: change,\n          acceptPendingValue() {\n            setValue(parsedPath, pendingValue);\n            setInitialValue(parsedPath, pendingValue);\n          },\n          rejectPendingValue() {\n            setPendingValue(parsedPath, value);\n            setInitialValue(parsedPath, pendingValue);\n          },\n          submit,\n\n          addFieldBefore: undefined,\n          addFieldAfter: undefined,\n          removeField: undefined,\n        },\n        arrayActions,\n      ),\n    );\n  }\n}\n\nclass Field extends React.PureComponent<FieldProps> {\n  static defaultProps: typeof Field.defaultProps;\n\n  render() {\n    const {path, format, parse, compare, checkbox, children} = this.props;\n\n    return (\n      <Consumer>\n        {(context) =>\n          context !== null &&\n          renderWrapper(FieldWrapper, context, {\n            path,\n            format,\n            parse,\n            compare,\n            checkbox,\n            children,\n          })\n        }\n      </Consumer>\n    );\n  }\n}\n\nField.defaultProps = {\n  format: (v: mixed) => {\n    if (v === null || v === undefined) {\n      return '';\n    }\n\n    return v;\n  },\n  parse: (v: mixed) => v,\n  compare: (value, otherValue) => {\n    return value === otherValue;\n  },\n  checkbox: false,\n};\n\nexport default Field;\n"],"file":"Field.js"}