{"version":3,"sources":["../src/util.js"],"names":["formatErrorPath","path","more","map","val","concat","join","pathError","pathSyntaxError","emptyPathError","emptyPathArrayError","emptyPathStringError","arrayTargetError","indexError","boundsError","pathArrayError","expectedArrayError","value","expectedPathIntError","pathPartError","isValidPath","Array","isArray","length","isInt","insert","array","index","TypeError","slice","remove","equals","a","b","Date","getTime","formatPath","result","forEach","part","parsePath","split","reduce","key","rest","i","match","exec","parseInt","_setWith","updater","currentPath","intKey","nextValue","undefined","updateResult","push","splice","setWith","object","set","get","keyIsInt","valueIsArray","valueIsUndefined","matchesDeep","test","Object","prototype","toString","call","hasOwnProperty","hasValue","isEvent","_event","stopPropagation","preventDefault","castEvent","event","mergeHandlers","h1","h2","eventOrValue","defaultPrevented","createParseEvent","HTMLElementClass","target","type","checked","parseEvent","HTMLElement"],"mappings":";;AAAA;AAEA;AAEA,MAAMA,kBAAkB,CAACC,IAAD,EAAmBC,IAAnB,KAA6C;AACnE,SAAOD,KACJE,GADI,CACCC,GAAD,IAAU,OAAOA,GAAP,KAAe,QAAf,GAA2B,IAAGA,GAAI,GAAlC,GAAwC,GAAEA,GAAI,EADxD,EAEJC,MAFI,CAEGH,OAAO,CAAC,KAAD,CAAP,GAAiB,EAFpB,EAGJI,IAHI,CAGC,IAHD,CAAP;AAID,CALD;;AAOA,OAAO,MAAMC,YAAY,MAAM,yCAAxB;AACP,OAAO,MAAMC,kBAAmBP,IAAD,IAC5B,kCAAiCA,IAAK,IADlC;AAEP,OAAO,MAAMQ,iBAAiB,MAC5B,mDADK;AAEP,OAAO,MAAMC,sBAAsB,MACjC,yCADK;AAEP,OAAO,MAAMC,uBAAuB,MAClC,0CADK;AAEP,OAAO,MAAMC,mBAAmB,MAAM,iCAA/B;AACP,OAAO,MAAMC,aAAa,MAAM,8BAAzB;AACP,OAAO,MAAMC,cAAc,MAAM,+BAA1B;AACP,OAAO,MAAMC,iBAAiB,MAAM,+BAA7B;AACP,OAAO,MAAMC,qBAAqB,CAChCC,KADgC,EAEhChB,IAFgC,EAGhCC,IAHgC,KAK/B,4CAA2CF,gBAC1CC,IAD0C,EAE1CC,IAF0C,CAG1C,0BAAyBe,KAAM,GAR5B;AASP,OAAO,MAAMC,uBAAuB,CAACjB,IAAD,EAAmBC,IAAnB,KACjC,8CAA6CF,gBAC5CC,IAD4C,EAE5CC,IAF4C,CAG5C,KAJG;AAKP,OAAO,MAAMiB,gBAAgB,CAAClB,IAAD,EAAmBC,IAAnB,KAC1B,wDAAuDF,gBACtDC,IADsD,EAEtDC,IAFsD,CAGtD,KAJG;AAMP,OAAO,MAAMkB,cAAenB,IAAD,IAAkC;AAC3D,SACGoB,MAAMC,OAAN,CAAcrB,IAAd,KAAuBA,KAAKsB,MAAL,KAAgB,CAAxC,IACC,OAAOtB,IAAP,KAAgB,QAAhB,IAA4BA,SAAS,EAFxC;AAID,CALM;AAOP,OAAO,MAAMuB,QAASpB,GAAD,IAAiC;AACpD,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,SAASA,MAAM,CAAf,CAAlC;AACD,CAFM;AAIP,OAAO,MAAMqB,SAAS,CACpBC,KADoB,EAEpBC,KAFoB,EAGpBV,KAHoB,KAIP;AACb,MAAI,CAACI,MAAMC,OAAN,CAAcI,KAAd,CAAL,EAA2B;AACzB,UAAM,IAAIE,SAAJ,CAAchB,kBAAd,CAAN;AACD;;AAED,MAAI,CAACY,MAAMG,KAAN,CAAL,EAAmB;AACjB,UAAM,IAAIC,SAAJ,CAAcf,YAAd,CAAN;AACD;;AAED,MAAIc,QAAQ,CAAR,IAAaA,QAAQD,MAAMH,MAA/B,EAAuC;AACrC,UAAM,IAAIK,SAAJ,CAAcd,aAAd,CAAN;AACD;;AAED,SAAOY,MAAMG,KAAN,CAAY,CAAZ,EAAeF,KAAf,EAAsBtB,MAAtB,CAA6B,CAACY,KAAD,CAA7B,EAAsCS,MAAMG,KAAN,CAAYF,KAAZ,CAAtC,CAAP;AACD,CAlBM;AAoBP,OAAO,MAAMG,SAAS,CAAIJ,KAAJ,EAAqBC,KAArB,KAAiD;AACrE,MAAI,CAACN,MAAMC,OAAN,CAAcI,KAAd,CAAL,EAA2B;AACzB,UAAM,IAAIE,SAAJ,CAAchB,kBAAd,CAAN;AACD;;AAED,MAAI,CAACY,MAAMG,KAAN,CAAL,EAAmB;AACjB,UAAM,IAAIC,SAAJ,CAAcf,YAAd,CAAN;AACD;;AAED,MAAIc,QAAQ,CAAR,IAAaA,SAASD,MAAMH,MAAhC,EAAwC;AACtC,UAAM,IAAIK,SAAJ,CAAcd,aAAd,CAAN;AACD;;AAED,SAAOY,MAAMG,KAAN,CAAY,CAAZ,EAAeF,KAAf,EAAsBtB,MAAtB,CAA6BqB,MAAMG,KAAN,CAAYF,QAAQ,CAApB,CAA7B,CAAP;AACD,CAdM;AAgBP,OAAO,MAAMI,SAAS,CAACC,CAAD,EAASC,CAAT,KAA6B;AACjD,MAAID,MAAMC,CAAV,EAAa;AACX,WAAO,IAAP;AACD,GAHgD,CAIjD;;;AACA,MAAID,MAAMA,CAAN,IAAWC,MAAMA,CAArB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,MAAID,aAAaE,IAAb,IAAqBD,aAAaC,IAAlC,IAA0CF,EAAEG,OAAF,OAAgBF,EAAEE,OAAF,EAA9D,EAA2E;AACzE,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAZM;AAcP,OAAO,MAAMC,aAAcnC,IAAD,IAAmD;AAC3E,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AAED,MAAIoB,MAAMC,OAAN,CAAcrB,IAAd,CAAJ,EAAyB;AACvB,QAAIoC,SAAS,EAAb;AAEApC,SAAKqC,OAAL,CAAcC,IAAD,IAAU;AACrB,UAAIf,MAAMe,IAAN,CAAJ,EAAiB;AACfF,kBAAW,IAAGE,IAAK,GAAnB;AACD,OAFD,MAEO,IAAIF,MAAJ,EAAY;AACjBA,kBAAW,IAAGE,IAAK,EAAnB;AACD,OAFM,MAEA;AACLF,iBAASE,IAAT;AACD;AACF,KARD;AAUA,WAAOF,MAAP;AACD;;AAED,QAAM,IAAIT,SAAJ,CAAcrB,WAAd,CAAN;AACD,CAtBM;AAwBP,OAAO,MAAMiC,YACXvC,IADuB,IAEI;AAC3B,MAAIoB,MAAMC,OAAN,CAAcrB,IAAd,CAAJ,EAAyB;AACvB,WAAOA,IAAP;AACD;;AAED,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,KAAKwC,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuB,CAACL,MAAD,EAASE,IAAT,KAAkB;AAC9C,UAAIA,SAAS,EAAT,IAAeF,OAAOd,MAAP,KAAkB,CAArC,EAAwC;AACtC,eAAOc,MAAP;AACD;;AAED,YAAMI,QAAQF,KAAKE,KAAL,CAAW,GAAX,CAAd;AACA,YAAME,MAAMF,MAAM,CAAN,CAAZ;AACA,YAAMG,OAAOH,MAAMZ,KAAN,CAAY,CAAZ,CAAb;AAEA,aAAOQ,OAAOhC,MAAP,CACLsC,QAAQ,EAAR,GAAa,EAAb,GAAkB,CAACA,GAAD,CADb,EAELC,KAAKzC,GAAL,CAAU0C,CAAD,IAAO;AACd,cAAMC,QAAQ,eAAeC,IAAf,CAAoBF,CAApB,CAAd;;AACA,YAAI,CAACC,KAAL,EAAY;AACV,gBAAM,IAAIlB,SAAJ,CACJpB,gBAAgB4B,WAAWC,OAAOhC,MAAP,CAAc,CAACkC,IAAD,CAAd,CAAX,CAAhB,CADI,CAAN;AAGD;;AACD,eAAOS,SAASF,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAP;AACD,OARD,CAFK,CAAP;AAYD,KArBM,EAqBJ,EArBI,CAAP;AAsBD;;AAED,QAAM,IAAIlB,SAAJ,CAAcrB,WAAd,CAAN;AACD,CAjCM;;AAmCP,MAAM0C,WAAW,CACfhC,KADe,EAEfhB,IAFe,EAGfiD,OAHe,EAIfC,cAAsC,EAJvB,KAKT;AACN,MAAI,CAAC9B,MAAMC,OAAN,CAAcrB,IAAd,CAAL,EAA0B;AACxB,UAAMc,gBAAN;AACD;;AAED,MAAI,CAACd,KAAKsB,MAAV,EAAkB;AAChB,WAAO2B,QAAQjC,KAAR,CAAP;AACD;;AAED,QAAM0B,MAAM1C,KAAK,CAAL,CAAZ;AACA,QAAMmD,SAAS5B,MAAMmB,GAAN,IAAaA,GAAb,GAAmB,IAAlC;;AAEA,MAAIS,WAAW,IAAX,IAAmB,OAAOT,GAAP,KAAe,QAAtC,EAAgD;AAC9C,UAAM,IAAIf,SAAJ,CACJT,cAAcgC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAAd,EAAyC1C,KAAKsB,MAAL,GAAc,CAAvD,CADI,CAAN;AAGD;;AAED,QAAM8B,YAAYpC,UAAUqC,SAAV,GAAuBrC,KAAD,CAAa0B,GAAb,CAAtB,GAA0CW,SAA5D;AACA,QAAMC,eACJtD,KAAKsB,MAAL,KAAgB,CAAhB,GACI2B,QAAQG,SAAR,CADJ,GAEIJ,SAASI,SAAT,EAAoBpD,KAAK4B,KAAL,CAAW,CAAX,CAApB,EAAmCqB,OAAnC,EAA4CC,YAAY9C,MAAZ,CAAmBsC,GAAnB,CAA5C,CAHN;;AAKA,MAAIS,WAAW,IAAf,EAAqB;AACnB,QAAI/B,MAAMC,OAAN,CAAcL,KAAd,KAAwBA,UAAUqC,SAAtC,EAAiD;AAC/C,UAAIrC,SAASc,OAAOwB,YAAP,EAAqBtC,MAAMmC,MAAN,CAArB,CAAb,EAAkD;AAChD;AACA,eAAOnC,KAAP;AACD;;AAED,YAAMoB,SAASpB,QAAQA,MAAMY,KAAN,CAAY,CAAZ,CAAR,GAAyB,EAAxC;;AACA,aAAOQ,OAAOd,MAAP,IAAiB6B,MAAxB,EAAgC;AAC9Bf,eAAOmB,IAAP,CAAYF,SAAZ;AACD;;AAEDjB,aAAOoB,MAAP,CAAcL,MAAd,EAAsB,CAAtB,EAAyBG,YAAzB;AACA,aAAQlB,MAAR;AACD;;AAED,UAAM,IAAIT,SAAJ,CACJZ,mBAAmBC,KAAnB,EAA0BkC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAA1B,EAAqD1C,KAAKsB,MAAL,GAAc,CAAnE,CADI,CAAN;AAGD,GAnBD,MAmBO,IAAIF,MAAMC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AAC/B,UAAM,IAAIW,SAAJ,CACJV,qBAAqBiC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAArB,EAAgD1C,KAAKsB,MAAL,GAAc,CAA9D,CADI,CAAN;AAGD;;AAED,MACEN,UAAU,IAAV,IACAA,UAAUqC,SADV,IAEAvB,OAAOwB,YAAP,EAAsBtC,KAAD,CAAa0B,GAAb,CAArB,CAHF,EAIE;AACA;AACA,WAAO1B,KAAP;AACD;;AAED,QAAMoB,SAAS,SAAc,EAAd,EAAkBpB,KAAlB,CAAf;;AACAoB,SAAOpC,KAAK,CAAL,CAAP,IAAkBsD,YAAlB;AACA,SAAOlB,MAAP;AACD,CAlED;;AAoEA,OAAO,MAAMqB,UAAU,CACrBC,MADqB,EAErB1D,IAFqB,EAGrBiD,OAHqB,KAIfD,SAASU,MAAT,EAAiB1D,IAAjB,EAAuBiD,OAAvB,CAJD;AAMP,OAAO,MAAMU,MAAM,CACjBD,MADiB,EAEjB1D,IAFiB,EAGjBgB,KAHiB,KAIXgC,SAASU,MAAT,EAAiB1D,IAAjB,EAAuB,MAAMgB,KAA7B,CAJD;AAMP,OAAO,MAAM4C,MAAM,CACjB5C,KADiB,EAEjBhB,IAFiB,EAGjBkD,cAAsC,EAHrB,KAIP;AACV,MAAI,CAAC9B,MAAMC,OAAN,CAAcrB,IAAd,CAAL,EAA0B;AACxB,UAAM,IAAI2B,SAAJ,CAAcb,gBAAd,CAAN;AACD;;AAED,MAAI,CAACd,KAAKsB,MAAV,EAAkB;AAChB,WAAON,KAAP;AACD;;AAED,QAAM0B,MAAM1C,KAAK,CAAL,CAAZ;AACA,QAAM6D,WAAWtC,MAAMmB,GAAN,CAAjB;AACA,QAAMoB,eAAe1C,MAAMC,OAAN,CAAcL,KAAd,CAArB;AACA,QAAM+C,mBAAmB/C,UAAUqC,SAAnC;;AAEA,MAAI,CAACQ,QAAD,IAAa,OAAOnB,GAAP,KAAe,QAAhC,EAA0C;AACxC,UAAM,IAAIf,SAAJ,CACJT,cAAcgC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAAd,EAAyC1C,KAAKsB,MAAL,GAAc,CAAvD,CADI,CAAN;AAGD;;AAED,MAAI,CAACuC,YAAYE,gBAAb,OAAoCD,gBAAgBC,gBAApD,CAAJ,EAA2E;AACzE,UAAM,IAAIpC,SAAJ,CACJkC,WACI9C,mBAAmBC,KAAnB,EAA0BkC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAA1B,EAAqD1C,KAAKsB,MAAL,GAAc,CAAnE,CADJ,GAEIL,qBAAqBiC,YAAY9C,MAAZ,CAAmB,CAACsC,GAAD,CAAnB,CAArB,EAAgD1C,KAAKsB,MAAL,GAAc,CAA9D,CAHA,CAAN;AAKD;;AAED,SAAOsC,IACLG,mBAAmBV,SAAnB,GAA+BrC,MAAM0B,GAAN,CAD1B,EAEL1C,KAAK4B,KAAL,CAAW,CAAX,CAFK,EAGLsB,YAAY9C,MAAZ,CAAmBsC,GAAnB,CAHK,CAAP;AAKD,CArCM;AAuCP,OAAO,MAAMsB,cAAc,CAAChD,KAAD,EAAaiD,IAAb,KAAmD;AAC5E,MAAIA,KAAKjD,KAAL,CAAJ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAII,MAAMC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AACxB,SAAK,IAAI4B,IAAI,CAAb,EAAgBA,IAAI5B,MAAMM,MAA1B,EAAkCsB,KAAK,CAAvC,EAA0C;AACxC,UAAIoB,YAAYhD,MAAM4B,CAAN,CAAZ,EAAsBqB,IAAtB,CAAJ,EAAiC,OAAO,IAAP;AAClC;AACF;;AAED,MAAI,sBAAsBA,IAAtB,CAA2BC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BrD,KAA/B,CAA3B,CAAJ,EAAuE;AACrE;AACA,SAAK,MAAM0B,GAAX,IAAkB1B,KAAlB,EAAyB;AACvB,UAAIkD,OAAOC,SAAP,CAAiBG,cAAjB,CAAgCD,IAAhC,CAAqCrD,KAArC,EAA4C0B,GAA5C,CAAJ,EAAsD;AACpD,YAAIsB,YAAYhD,MAAM0B,GAAN,CAAZ,EAAwBuB,IAAxB,CAAJ,EAAmC;AACjC,iBAAO,IAAP;AACD;AACF;AACF;AACF;;AAED,SAAO,KAAP;AACD,CAvBM;AAyBP,OAAO,MAAMM,WAAYvD,KAAD,IACtBgD,YACEhD,KADF,EAEGA,KAAD,IACE,CAAC,wCAAwCiD,IAAxC,CACCC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BrD,KAA/B,CADD,CAHL,CADK;AASP,OAAO,MAAMwD,UAAWC,MAAD,IAA4B;AACjD;AACA,SACEA,WAAW,IAAX,IACA,OAAOA,MAAP,KAAkB,QADlB,IAEA,OAAOA,OAAOC,eAAd,KAAkC,UAFlC,IAGA,OAAOD,OAAOE,cAAd,KAAiC,UAJnC;AAMD,CARM;AAUP,OAAO,MAAMC,YACXC,KADuB,IAEc;AACrC,SAAOL,QAAQK,KAAR,IAAkBA,KAAlB,GAAgC,IAAvC;AACD,CAJM;AAMP,OAAO,MAAMC,gBAAgB,CAC3BC,EAD2B,EAE3BC,EAF2B,KAGxB;AACH,SAAQC,YAAD,IAA+B;AACpC,QAAIF,EAAJ,EAAQ;AACNA,SAAGE,YAAH;AAEA,YAAMJ,QAAQD,UAAUK,YAAV,CAAd;;AACA,UAAIJ,UAAU,IAAV,IAAkBA,MAAMK,gBAA5B,EAA8C;AAC5C;AACD;AACF;;AAEDF,OAAGC,YAAH;AACD,GAXD;AAYD,CAhBM;AAkBP,OAAO,MAAME,mBAAoBC,gBAAD,IAAgC;AAC9D,SAAQH,YAAD,IAAgC;AACrC,UAAMJ,QAAQD,UAAUK,YAAV,CAAd;;AAEA,QAAI,CAACJ,KAAL,EAAY;AACV,aAAOI,YAAP;AACD;;AAED,QAAIJ,MAAMQ,MAAN,YAAwBD,gBAA5B,EAA8C;AAC5C,YAAME,OAAOT,MAAMQ,MAAN,CAAaC,IAA1B;;AAEA,UAAIA,SAAS,UAAb,EAAyB;AACvB,eAAO,CAAC,CAACT,MAAMQ,MAAN,CAAaE,OAAtB;AACD,OAL2C,CAO5C;;;AAEA,aAAOV,MAAMQ,MAAN,CAAarE,KAApB;AACD;;AAED,WAAOqC,SAAP;AACD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMmC,aAAaL,iBAAiBM,WAAjB,CAAnB","sourcesContent":["// @flow strict\n\n// flowlint unclear-type:off\n\nconst formatErrorPath = (path: Array<any>, more: boolean): string => {\n  return path\n    .map((val) => (typeof val === 'string' ? `\"${val}\"` : `${val}`))\n    .concat(more ? ['...'] : [])\n    .join(', ');\n};\n\nexport const pathError = () => 'Invalid path. Expected array or string.';\nexport const pathSyntaxError = (path: string) =>\n  `Invalid path. Syntax error at \"${path}\".`;\nexport const emptyPathError = () =>\n  'Invalid path. Expected non-empty array or string.';\nexport const emptyPathArrayError = () =>\n  'Invalid path. Expected non-empty array.';\nexport const emptyPathStringError = () =>\n  'Invalid path. Expected non-empty string.';\nexport const arrayTargetError = () => 'Invalid target. Expected array.';\nexport const indexError = () => 'Invalid index. Expected int.';\nexport const boundsError = () => 'Invalid index. Out of bounds.';\nexport const pathArrayError = () => 'Invalid path. Expected array.';\nexport const expectedArrayError = (\n  value: any,\n  path: Array<any>,\n  more: boolean,\n) =>\n  `Invalid value. Expected array at path: [ ${formatErrorPath(\n    path,\n    more,\n  )} ]. Encountered value: ${value}.`;\nexport const expectedPathIntError = (path: Array<any>, more: boolean) =>\n  `Invalid path part. Expected int at path: [ ${formatErrorPath(\n    path,\n    more,\n  )} ].`;\nexport const pathPartError = (path: Array<any>, more: boolean) =>\n  `Invalid path part. Expected string or int at path: [ ${formatErrorPath(\n    path,\n    more,\n  )} ].`;\n\nexport const isValidPath = (path: mixed): boolean %checks => {\n  return (\n    (Array.isArray(path) && path.length !== 0) ||\n    (typeof path === 'string' && path !== '')\n  );\n};\n\nexport const isInt = (val: mixed): boolean %checks => {\n  return typeof val === 'number' && val === (val | 0);\n};\n\nexport const insert = <T>(\n  array: Array<T>,\n  index: number,\n  value: T,\n): Array<T> => {\n  if (!Array.isArray(array)) {\n    throw new TypeError(arrayTargetError());\n  }\n\n  if (!isInt(index)) {\n    throw new TypeError(indexError());\n  }\n\n  if (index < 0 || index > array.length) {\n    throw new TypeError(boundsError());\n  }\n\n  return array.slice(0, index).concat([value], array.slice(index));\n};\n\nexport const remove = <T>(array: Array<T>, index: number): Array<T> => {\n  if (!Array.isArray(array)) {\n    throw new TypeError(arrayTargetError());\n  }\n\n  if (!isInt(index)) {\n    throw new TypeError(indexError());\n  }\n\n  if (index < 0 || index >= array.length) {\n    throw new TypeError(boundsError());\n  }\n\n  return array.slice(0, index).concat(array.slice(index + 1));\n};\n\nexport const equals = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  }\n  // eslint-disable-next-line no-self-compare\n  if (a !== a && b !== b) {\n    return true;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const formatPath = (path: Array<string | number> | string): string => {\n  if (typeof path === 'string') {\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    let result = '';\n\n    path.forEach((part) => {\n      if (isInt(part)) {\n        result += `[${part}]`;\n      } else if (result) {\n        result += `.${part}`;\n      } else {\n        result = part;\n      }\n    });\n\n    return result;\n  }\n\n  throw new TypeError(pathError());\n};\n\nexport const parsePath = (\n  path: Array<string | number> | string,\n): Array<string | number> => {\n  if (Array.isArray(path)) {\n    return path;\n  }\n\n  if (typeof path === 'string') {\n    return path.split('.').reduce((result, part) => {\n      if (part === '' && result.length === 0) {\n        return result;\n      }\n\n      const split = part.split('[');\n      const key = split[0];\n      const rest = split.slice(1);\n\n      return result.concat(\n        key === '' ? [] : [key],\n        rest.map((i) => {\n          const match = /^([0-9]+)\\]$/.exec(i);\n          if (!match) {\n            throw new TypeError(\n              pathSyntaxError(formatPath(result.concat([part]))),\n            );\n          }\n          return parseInt(match[1], 10);\n        }),\n      );\n    }, []);\n  }\n\n  throw new TypeError(pathError());\n};\n\nconst _setWith = <T>(\n  value: T,\n  path: Array<string | number>,\n  updater: (any) => any,\n  currentPath: Array<string | number> = [],\n): T => {\n  if (!Array.isArray(path)) {\n    throw pathArrayError();\n  }\n\n  if (!path.length) {\n    return updater(value);\n  }\n\n  const key = path[0];\n  const intKey = isInt(key) ? key : null;\n\n  if (intKey === null && typeof key !== 'string') {\n    throw new TypeError(\n      pathPartError(currentPath.concat([key]), path.length > 1),\n    );\n  }\n\n  const nextValue = value !== undefined ? (value: any)[key] : undefined;\n  const updateResult =\n    path.length === 1\n      ? updater(nextValue)\n      : _setWith(nextValue, path.slice(1), updater, currentPath.concat[key]);\n\n  if (intKey !== null) {\n    if (Array.isArray(value) || value === undefined) {\n      if (value && equals(updateResult, value[intKey])) {\n        // The correct value is already in place, abort update.\n        return value;\n      }\n\n      const result = value ? value.slice(0) : [];\n      while (result.length <= intKey) {\n        result.push(undefined);\n      }\n\n      result.splice(intKey, 1, updateResult);\n      return (result: any);\n    }\n\n    throw new TypeError(\n      expectedArrayError(value, currentPath.concat([key]), path.length > 1),\n    );\n  } else if (Array.isArray(value)) {\n    throw new TypeError(\n      expectedPathIntError(currentPath.concat([key]), path.length > 1),\n    );\n  }\n\n  if (\n    value !== null &&\n    value !== undefined &&\n    equals(updateResult, (value: any)[key])\n  ) {\n    // The correct value is already in place, abort update.\n    return value;\n  }\n\n  const result = Object.assign({}, value);\n  result[path[0]] = updateResult;\n  return result;\n};\n\nexport const setWith = <T>(\n  object: T,\n  path: Array<string | number>,\n  updater: (mixed) => mixed,\n): T => _setWith(object, path, updater);\n\nexport const set = <T>(\n  object: T,\n  path: Array<string | number>,\n  value: mixed,\n): T => _setWith(object, path, () => value);\n\nexport const get = (\n  value: any,\n  path: Array<string | number>,\n  currentPath: Array<string | number> = [],\n): mixed => {\n  if (!Array.isArray(path)) {\n    throw new TypeError(pathArrayError());\n  }\n\n  if (!path.length) {\n    return value;\n  }\n\n  const key = path[0];\n  const keyIsInt = isInt(key);\n  const valueIsArray = Array.isArray(value);\n  const valueIsUndefined = value === undefined;\n\n  if (!keyIsInt && typeof key !== 'string') {\n    throw new TypeError(\n      pathPartError(currentPath.concat([key]), path.length > 1),\n    );\n  }\n\n  if ((keyIsInt || valueIsUndefined) !== (valueIsArray || valueIsUndefined)) {\n    throw new TypeError(\n      keyIsInt\n        ? expectedArrayError(value, currentPath.concat([key]), path.length > 1)\n        : expectedPathIntError(currentPath.concat([key]), path.length > 1),\n    );\n  }\n\n  return get(\n    valueIsUndefined ? undefined : value[key],\n    path.slice(1),\n    currentPath.concat[key],\n  );\n};\n\nexport const matchesDeep = (value: any, test: (mixed) => boolean): boolean => {\n  if (test(value)) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i += 1) {\n      if (matchesDeep(value[i], test)) return true;\n    }\n  }\n\n  if (/^\\[object Object\\]$/.test(Object.prototype.toString.call(value))) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        if (matchesDeep(value[key], test)) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nexport const hasValue = (value: mixed) =>\n  matchesDeep(\n    value,\n    (value) =>\n      !/^\\[object (Object|Array|Undefined)\\]$/.test(\n        Object.prototype.toString.call(value),\n      ),\n  );\n\nexport const isEvent = (_event: mixed): boolean => {\n  // Duck-type Event and SyntheticEvent instances\n  return (\n    _event !== null &&\n    typeof _event === 'object' &&\n    typeof _event.stopPropagation === 'function' &&\n    typeof _event.preventDefault === 'function'\n  );\n};\n\nexport const castEvent = <T>(\n  event: mixed,\n): Event | SyntheticEvent<T> | null => {\n  return isEvent(event) ? (event: any) : null;\n};\n\nexport const mergeHandlers = (\n  h1: ((mixed) => mixed) | void,\n  h2: (mixed) => void,\n) => {\n  return (eventOrValue: mixed): void => {\n    if (h1) {\n      h1(eventOrValue);\n\n      const event = castEvent(eventOrValue);\n      if (event !== null && event.defaultPrevented) {\n        return;\n      }\n    }\n\n    h2(eventOrValue);\n  };\n};\n\nexport const createParseEvent = (HTMLElementClass: Function) => {\n  return (eventOrValue: mixed): mixed => {\n    const event = castEvent(eventOrValue);\n\n    if (!event) {\n      return eventOrValue;\n    }\n\n    if (event.target instanceof HTMLElementClass) {\n      const type = event.target.type;\n\n      if (type === 'checkbox') {\n        return !!event.target.checked;\n      }\n\n      // TODO: Parse additional event types: file, multiple-select, etc.\n\n      return event.target.value;\n    }\n\n    return undefined;\n  };\n};\n\nexport const parseEvent = createParseEvent(HTMLElement);\n"],"file":"util.js"}