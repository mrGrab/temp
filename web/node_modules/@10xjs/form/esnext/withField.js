function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

//  strict
import * as React from 'react'; // flowlint untyped-import:off

import hoistStatics from 'hoist-non-react-statics'; // flowlint untyped-import:error

import { isValidPath, emptyPathError } from './util';
import Field from './Field';

const withField = (propName, config) => Component => {
  if (typeof propName !== 'string') {
    throw new TypeError('Invalid withField prop name. Expected string.');
  }

  if (!config || typeof config !== 'object') {
    throw new TypeError('Invalid withField config. Expected object.');
  }

  if (!isValidPath(config.path)) {
    throw new TypeError(emptyPathError());
  }

  class WithField extends React.PureComponent {
    render() {
      return React.createElement(Field, config, fieldProps => {
        const props = {};
        props[propName] = fieldProps;
        return React.createElement(Component, _extends({}, props, this.props));
      });
    }

  }

  return hoistStatics(WithField, Component);
};

export default withField;
//# sourceMappingURL=withField.js.map